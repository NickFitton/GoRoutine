package templates

import (
  "routine.nfitton.com/users"
 )

templ Root(users []users.User) {
  <main class="container mx-auto p-4 md:p-6">
    <div class="flex flex-col gap-4">
      <div class="flex flex-col gap-2">
        <h1 class="text-2xl font-bold">User Management</h1>
        <p class="text-gray-500 dark:text-gray-400">Create a new user or manage existing ones.</p>
      </div>
      <form class="grid gap-4 md:grid-cols-2 lg:grid-cols-3" id="createUserForm">
        <div class="space-y-2">
          <label
            class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            for="email"
          >
            New User Email
          </label>
          <input
            class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
            id="email"
            placeholder="m@example.com"
            required=""
            type="email"
          />
        </div>
        <div class="flex items-end">
          <button type="submit" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full md:w-auto">
            Create User
          </button>
        </div>
      </form>
      <div class="border shadow-sm rounded-lg">
        <div class="relative w-full overflow-auto">
          <table class="w-full caption-bottom text-sm">
            <thead class="[&amp;_tr]:border-b">
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Email
                </th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  ID
                </th>
              </tr>
            </thead>
            <tbody class="[&amp;_tr:last-child]:border-0">
              for _, user := range users {
                <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                  <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">{user.Email}</td>
                  <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">{user.Id.String()}</td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </main>
  <script async>
    const form = document.getElementById("createUserForm");
    form.addEventListener("submit", (event) => {
      const email = document.getElementById("email").value;
      event.preventDefault();
      console.log(email);
      fetch("http://localhost:8080/api/users", {
        method: "POST",
        body: JSON.stringify({ email }),
        headers: {
          "Content-Type": "application/json"
        }
      }).then(response => {
        console.log(response);
        try {

        const location = response.headers.get("Location");
        console.log("Location", location)
        window.location.replace(location);
        } catch (e) {
          console.error(e)
        }
      })
      .catch(console.error);
    });
  </script>
}
